name: home-server

services: 
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    command:
      # --providers.docker : pour détecter la configuration via labels Docker
      - "--providers.docker=true"

      # (Optionnel) Permet d'avoir un dashboard sur http://<IP>:8080
      - "--api.insecure=true"

      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"

      # Configuration Let's Encrypt DNS-01 via DuckDNS
      - "--certificatesresolvers.myresolver.acme.email=${DUCKDNS_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.provider=duckdns"
      # Délai avant vérification (pour laisser le TXT se propager)
      - "--certificatesresolvers.myresolver.acme.dnsChallenge.delayBeforeCheck=10"

      # Redirection automatique HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

    # On publie les ports 80 et 443
    ports:
      - "80:80"
      - "443:443"
      # (Optionnel) Dashboard sur le port 8080
      - "8080:8080"

    environment:
      # Variable d'env pour le token DuckDNS
      - "DUCKDNS_TOKEN=${DUCKDNS_TOKEN}"

    volumes:
      # Socket Docker en lecture seule
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # Répertoire de stockage pour les certificats
      - "./acme.json:/letsencrypt/acme.json"

    networks:
      - web

  vault-secrets:
    image: hashicorp/vault:1.18
    container_name: vault-secrets
    restart: unless-stopped
    ports:
      - "127.0.0.1:${VAULT_PORT_HOST:-8200}:8200"
    environment:
      - VAULT_ADDR=http://127.0.0.1:8200
      - VAULT_API_ADDR=http://127.0.0.1:8200
    command: "server"
    labels:
      # Active Traefik pour ce container
      - "traefik.enable=true"

      # On définit la règle : hôte ET chemin qui doit matcher
      - "traefik.http.routers.vault.rule=Host(`${VAULT_DNS}`)"

      # On associe à l'entrypoint HTTPS
      - "traefik.http.routers.vault.entrypoints=websecure"

      # On active TLS + résolveur de certificats
      - "traefik.http.routers.vault.tls=true"
      - "traefik.http.routers.vault.tls.certresolver=myresolver"

      # Service : indique le port interne (8200) à cibler
      - "traefik.http.services.vault.loadbalancer.server.port=8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - "${VAULT_VOLUME_FILE-./data/vault/file}:/vault/file"
      - "./vault-config.json:/vault/config/vault-config.json"
    networks:
      - web

  langflow:
    image: langflowai/langflow:latest
    ports:
      - "7860:7860"

networks:
  web:
    driver: bridge